@page "/hero"
@page "/hero/{id:int}"
@inject ISuperHeroesService _service

@if (Id == null)
{
    <PageTitle>Create a new SuperHeroe</PageTitle>
    <h3>Create a new SuperHeroe</h3>
}
else
{
    <PageTitle>Edit @hero.HeroName</PageTitle>
    <h3>Edit @hero.HeroName</h3>
}


<EditForm Model="hero" OnSubmit="handleSubmit">
    <div>
        <label for="firsname">First Name</label>
        <InputText id="firsname" @bind-Value="hero.FirstName" class="form-control"></InputText>
    </div>
        <div>
        <label for="lastname">Last Name</label>
        <InputText id="lastname" @bind-Value="hero.LastName" class="form-control"></InputText>
    </div>
        <div>
        <label for="heroname">Hero Name</label>
        <InputText id="heroname" @bind-Value="hero.HeroName" class="form-control"></InputText>
    </div>
    <div>
        <label>Comic</label><br />
        <InputSelect @bind-Value="hero.ComicID" class="form-select">
            @foreach (var comic in _service.Comics)
           {
               <option value="@comic.Id">@comic.Name</option>
           }
        </InputSelect>
    </div>
    <br />
    <button type="submit" class="btn btn-primary">@btnText</button>
    <button type="button" class="btn btn-danger" @onclick="DeleteHero">Delete</button>
</EditForm>

@code {

    [Parameter]
    public int? Id { get; set; }

    string btnText = string.Empty;

    SuperHero hero = new SuperHero { Comic = new Comic() };

    protected override async Task OnInitializedAsync()
    {
        btnText = Id == null ? "Save" : "Update";
        await _service.GetComics();
    }

    protected override async Task OnParametersSetAsync()
    {
        if (Id == null)
        {
            hero.Comic = _service.Comics[0];
            hero.ComicID = hero.Comic.Id;
        }
        else
        {
            hero = await _service.GetSingleHero((int)Id);
        }


    }

    async Task handleSubmit()
    {
        if (Id == null)
        {
            await _service.CreateHero(hero);
        }
        else
        {
            await _service.UpdateHero(hero);
        }
    }

    async Task DeleteHero()
    {
        await _service.DeleteHero(hero.Id);
    }
}
